// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobilePhoneSpecsApi.Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MobilePhoneSpecsApi.Migrations
{
    [DbContext(typeof(SpecificationsDbContext))]
    partial class SpecificationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.GsmBatteryDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("batteryCharging")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("battery_charging");

                    b.Property<string>("batteryType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("battery_type");

                    b.HasKey("customId");

                    b.ToTable("GsmBatteryDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.GsmBodyDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("bodyBuild")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_build");

                    b.Property<string>("bodyDimensions")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_dimensions");

                    b.Property<string>("bodyOther1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_other1");

                    b.Property<string>("bodyOther2")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_other2");

                    b.Property<string>("bodyOther3")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_other3");

                    b.Property<string>("bodySim")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_sim");

                    b.Property<string>("bodyWeight")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body_weight");

                    b.HasKey("customId");

                    b.ToTable("GsmBodyDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.GsmDisplayDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("displayOther1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_other1");

                    b.Property<string>("displayProtection")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_protection");

                    b.Property<string>("displayResolution")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_resolution");

                    b.Property<string>("displaySize")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_size");

                    b.Property<string>("displayType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_type");

                    b.HasKey("customId");

                    b.ToTable("GsmDisplayDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.GsmLaunchDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("launchAnnounced")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("launch_announced");

                    b.Property<string>("launchStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("launch_status");

                    b.HasKey("customId");

                    b.ToTable("GsmLaunchDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.GsmMemoryDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("memoryCardSlot")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("memory_card_slot");

                    b.Property<string>("memoryInternal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("memory_internal");

                    b.Property<string>("memoryOther1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("memory_other1");

                    b.HasKey("customId");

                    b.ToTable("GsmMemoryDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.GsmSoundDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("sound35MmJack")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sound_35mm_jack");

                    b.Property<string>("soundLoudspeaker")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sound_loudspeaker");

                    b.Property<string>("soundOther1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sound_other1");

                    b.Property<string>("soundOther2")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sound_other2");

                    b.HasKey("customId");

                    b.ToTable("GsmSoundDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.PhoneDetails", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<string>("brandValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("brand_value");

                    b.Property<string>("modelValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model_value");

                    b.Property<string>("yearValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("year_value");

                    b.HasKey("customId");

                    b.ToTable("PhoneDetails");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.Specification", b =>
                {
                    b.Property<long>("customId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("custom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customId"));

                    b.Property<long>("gsmBatteryDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("gsm_battery_details_id");

                    b.Property<long>("gsmBodyDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("gsm_body_details_id");

                    b.Property<long>("gsmDisplayDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("gsm_display_details_id");

                    b.Property<long>("gsmLaunchDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("gsm_launch_details_id");

                    b.Property<long>("gsmMemoryDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("gsm_memory_details_id");

                    b.Property<long>("gsmSoundDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("gsm_sound_details_id");

                    b.Property<long>("phoneDetailsId")
                        .HasColumnType("bigint")
                        .HasColumnName("phone_details_id");

                    b.HasKey("customId");

                    b.HasIndex("gsmBatteryDetailsId");

                    b.HasIndex("gsmBodyDetailsId");

                    b.HasIndex("gsmDisplayDetailsId");

                    b.HasIndex("gsmLaunchDetailsId");

                    b.HasIndex("gsmMemoryDetailsId");

                    b.HasIndex("gsmSoundDetailsId");

                    b.HasIndex("phoneDetailsId");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("MobilePhoneSpecsApi.Models.Specification", b =>
                {
                    b.HasOne("MobilePhoneSpecsApi.Models.GsmBatteryDetails", "gsmBatteryDetails")
                        .WithMany()
                        .HasForeignKey("gsmBatteryDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobilePhoneSpecsApi.Models.GsmBodyDetails", "gsmBodyDetails")
                        .WithMany()
                        .HasForeignKey("gsmBodyDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobilePhoneSpecsApi.Models.GsmDisplayDetails", "gsmDisplayDetails")
                        .WithMany()
                        .HasForeignKey("gsmDisplayDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobilePhoneSpecsApi.Models.GsmLaunchDetails", "gsmLaunchDetails")
                        .WithMany()
                        .HasForeignKey("gsmLaunchDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobilePhoneSpecsApi.Models.GsmMemoryDetails", "gsmMemoryDetails")
                        .WithMany()
                        .HasForeignKey("gsmMemoryDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobilePhoneSpecsApi.Models.GsmSoundDetails", "gsmSoundDetails")
                        .WithMany()
                        .HasForeignKey("gsmSoundDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobilePhoneSpecsApi.Models.PhoneDetails", "phoneDetails")
                        .WithMany()
                        .HasForeignKey("phoneDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gsmBatteryDetails");

                    b.Navigation("gsmBodyDetails");

                    b.Navigation("gsmDisplayDetails");

                    b.Navigation("gsmLaunchDetails");

                    b.Navigation("gsmMemoryDetails");

                    b.Navigation("gsmSoundDetails");

                    b.Navigation("phoneDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
